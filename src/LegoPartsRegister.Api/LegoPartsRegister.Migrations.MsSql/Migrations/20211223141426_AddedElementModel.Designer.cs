// <auto-generated />
using LegoPartsRegister.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegoPartsRegister.Migrations.MsSql.Migrations
{
	[DbContext( typeof( AppDbContext ) )]
	[Migration( "20211223141426_AddedElementModel" )]
	partial class AddedElementModel
	{
		protected override void BuildTargetModel( ModelBuilder modelBuilder )
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation( "ProductVersion", "6.0.1" )
				.HasAnnotation( "Relational:MaxIdentifierLength", 128 );

			SqlServerModelBuilderExtensions.UseIdentityColumns( modelBuilder, 1L, 1 );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Models.ColorModel", b =>
				 {
					 b.Property<int>( "Id" )
						 .ValueGeneratedOnAdd()
						 .HasColumnType( "int" );

					 SqlServerPropertyBuilderExtensions.UseIdentityColumn( b.Property<int>( "Id" ), 1L, 1 );

					 b.Property<string>( "HexValue" )
						 .IsRequired()
						 .HasColumnType( "nvarchar(450)" );

					 b.Property<bool>( "IsTrans" )
						 .HasColumnType( "bit" );

					 b.Property<string>( "Name" )
						 .IsRequired()
						 .HasColumnType( "nvarchar(450)" );

					 b.HasKey( "Id" );

					 b.HasIndex( "HexValue" )
						 .IsUnique();

					 b.HasIndex( "Name" )
						 .IsUnique();

					 b.ToTable( "Colors" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Models.PartModel", b =>
				 {
					 b.Property<int>( "Id" )
						 .ValueGeneratedOnAdd()
						 .HasColumnType( "int" );

					 SqlServerPropertyBuilderExtensions.UseIdentityColumn( b.Property<int>( "Id" ), 1L, 1 );

					 b.Property<string>( "Name" )
						 .IsRequired()
						 .HasMaxLength( 512 )
						 .HasColumnType( "nvarchar(512)" );

					 b.Property<string>( "No" )
						 .IsRequired()
						 .HasMaxLength( 32 )
						 .HasColumnType( "nvarchar(32)" );

					 b.HasKey( "Id" );

					 b.HasIndex( "Name" );

					 b.HasIndex( "No" )
						 .IsUnique();

					 b.ToTable( "Parts" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Models.UserModel", b =>
				 {
					 b.Property<int>( "Id" )
						 .ValueGeneratedOnAdd()
						 .HasColumnType( "int" );

					 SqlServerPropertyBuilderExtensions.UseIdentityColumn( b.Property<int>( "Id" ), 1L, 1 );

					 b.Property<string>( "PasswordHash" )
						 .IsRequired()
						 .HasColumnType( "nvarchar(max)" );

					 b.Property<string>( "Username" )
						 .IsRequired()
						 .HasMaxLength( 32 )
						 .HasColumnType( "nvarchar(32)" );

					 b.Property<string>( "Uuid" )
						 .IsRequired()
						 .HasMaxLength( 24 )
						 .HasColumnType( "nvarchar(24)" );

					 b.HasKey( "Id" );

					 b.HasIndex( "Username" )
						 .IsUnique();

					 b.HasIndex( "Uuid" )
						 .IsUnique();

					 b.ToTable( "Users" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Relations.ElementModel", b =>
				 {
					 b.Property<int>( "Id" )
						 .ValueGeneratedOnAdd()
						 .HasColumnType( "int" );

					 SqlServerPropertyBuilderExtensions.UseIdentityColumn( b.Property<int>( "Id" ), 1L, 1 );

					 b.Property<int>( "ColorId" )
						 .HasColumnType( "int" );

					 b.Property<string>( "No" )
						 .IsRequired()
						 .HasColumnType( "nvarchar(450)" );

					 b.Property<int>( "PartId" )
						 .HasColumnType( "int" );

					 b.HasKey( "Id" );

					 b.HasIndex( "ColorId" );

					 b.HasIndex( "No" )
						 .IsUnique();

					 b.HasIndex( "PartId", "ColorId" )
						 .IsUnique();

					 b.ToTable( "Elements" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Relations.ElementModel", b =>
				 {
					 b.HasOne( "LegoPartsRegister.Domain.Models.ColorModel", "Color" )
						 .WithMany( "Elements" )
						 .HasForeignKey( "ColorId" )
						 .OnDelete( DeleteBehavior.Cascade )
						 .IsRequired();

					 b.HasOne( "LegoPartsRegister.Domain.Models.PartModel", "Part" )
						 .WithMany( "Elements" )
						 .HasForeignKey( "PartId" )
						 .OnDelete( DeleteBehavior.Cascade )
						 .IsRequired();

					 b.Navigation( "Color" );

					 b.Navigation( "Part" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Models.ColorModel", b =>
				 {
					 b.Navigation( "Elements" );
				 } );

			modelBuilder.Entity( "LegoPartsRegister.Domain.Models.PartModel", b =>
				 {
					 b.Navigation( "Elements" );
				 } );
#pragma warning restore 612, 618
		}
	}
}
